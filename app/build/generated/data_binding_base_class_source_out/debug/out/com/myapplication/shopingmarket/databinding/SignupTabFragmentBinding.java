// Generated by view binder compiler. Do not edit!
package com.myapplication.shopingmarket.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.myapplication.shopingmarket.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupTabFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText mailUp;

  @NonNull
  public final EditText mobile;

  @NonNull
  public final TextInputEditText passConf;

  @NonNull
  public final TextInputEditText passUp;

  @NonNull
  public final Button signButton;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextInputLayout textInputLayout4;

  private SignupTabFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull EditText mailUp,
      @NonNull EditText mobile, @NonNull TextInputEditText passConf,
      @NonNull TextInputEditText passUp, @NonNull Button signButton,
      @NonNull TextInputLayout textInputLayout2, @NonNull TextInputLayout textInputLayout4) {
    this.rootView = rootView;
    this.mailUp = mailUp;
    this.mobile = mobile;
    this.passConf = passConf;
    this.passUp = passUp;
    this.signButton = signButton;
    this.textInputLayout2 = textInputLayout2;
    this.textInputLayout4 = textInputLayout4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupTabFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupTabFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup_tab_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupTabFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mail_up;
      EditText mailUp = ViewBindings.findChildViewById(rootView, id);
      if (mailUp == null) {
        break missingId;
      }

      id = R.id.mobile;
      EditText mobile = ViewBindings.findChildViewById(rootView, id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.pass_conf;
      TextInputEditText passConf = ViewBindings.findChildViewById(rootView, id);
      if (passConf == null) {
        break missingId;
      }

      id = R.id.pass_up;
      TextInputEditText passUp = ViewBindings.findChildViewById(rootView, id);
      if (passUp == null) {
        break missingId;
      }

      id = R.id.sign_button;
      Button signButton = ViewBindings.findChildViewById(rootView, id);
      if (signButton == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.textInputLayout4;
      TextInputLayout textInputLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout4 == null) {
        break missingId;
      }

      return new SignupTabFragmentBinding((ConstraintLayout) rootView, mailUp, mobile, passConf,
          passUp, signButton, textInputLayout2, textInputLayout4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
